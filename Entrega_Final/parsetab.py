
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftGREATERTHANLOWERTHANGREATEREQLOWEREQEQEQDIFleft+-left*/%ifIFleftELSErightUMINUSCOMMA DIF DIVIDE ELSE ENDELSE ENDFOR ENDIF EQEQ FINFUNC FOR FUNC GREATEREQ GREATERTHAN IF LOWEREQ LOWERTHAN LPAREN MINUS NAME NUMBER PLUS PRINT REGRESA RPAREN THEN TIMES TWOPOINTS VAR WHILEstatement : NAME "=" expressionstatement : expression\n                     | if_statementprint : PRINT LPAREN NAME RPAREN\n                | PRINT LPAREN NUMBER RPAREN\n                expression : expression \'+\' expression\n                    | expression \'-\' expression\n                    | expression \'*\' expression\n                    | expression \'/\' expression\n                    | expression \'%\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : NAMEstatements : statement\n                    | statements statement\n                    | statements print\n        if_statement : IF LPAREN comparison RPAREN TWOPOINTS then_statement ENDIF\n        then_statement : if_statement\n                        |  expression\n                        |  statement\n                        |  statements\n        \n        else_statement :    ELSE expression ENDELSE\n                    |   ELSE if_statement ENDELSE\n                    |   empty\n         empty : \'\'\n        comparison : expression GREATERTHAN expression\n                    | expression LOWERTHAN expression\n                    | expression GREATEREQ expression\n                    | expression LOWEREQ expression\n                    | expression EQEQ expression\n                    | expression DIF expression'
    
_lr_action_items = {'NAME':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,43,44,45,46,47,48,49,50,52,55,56,],[2,-14,-2,-3,16,16,-13,16,16,16,16,16,16,-11,-14,16,-1,-6,-7,-8,-9,-10,-12,16,16,16,16,16,16,47,-3,-2,-15,2,-14,-18,-16,-17,53,-4,-5,]),'-':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,55,56,],[5,-14,11,-3,5,5,-13,5,5,5,5,5,5,-11,-14,11,5,11,-6,-7,-8,-9,-10,-12,11,5,5,5,5,5,5,5,11,11,11,11,11,11,-3,11,-15,5,-14,-18,-16,-17,-4,-5,]),'(':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,43,44,45,46,47,48,49,50,55,56,],[6,-14,-2,-3,6,6,-13,6,6,6,6,6,6,-11,-14,6,-1,-6,-7,-8,-9,-10,-12,6,6,6,6,6,6,6,-3,-2,-15,6,-14,-18,-16,-17,-4,-5,]),'NUMBER':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,43,44,45,46,47,48,49,50,52,55,56,],[7,-14,-2,-3,7,7,-13,7,7,7,7,7,7,-11,-14,7,-1,-6,-7,-8,-9,-10,-12,7,7,7,7,7,7,7,-3,-2,-15,7,-14,-18,-16,-17,54,-4,-5,]),'IF':([0,2,3,4,7,15,16,19,20,21,22,23,24,25,35,43,44,45,46,47,48,49,50,55,56,],[8,-14,-2,-3,-13,-11,-14,-1,-6,-7,-8,-9,-10,-12,8,-3,-2,-15,8,-14,-18,-16,-17,-4,-5,]),'$end':([1,2,3,4,7,15,16,19,20,21,22,23,24,25,48,],[0,-14,-2,-3,-13,-11,-14,-1,-6,-7,-8,-9,-10,-12,-18,]),'=':([2,47,],[9,9,]),'+':([2,3,7,15,16,17,19,20,21,22,23,24,25,27,36,37,38,39,40,41,44,47,],[-14,10,-13,-11,-14,10,10,-6,-7,-8,-9,-10,-12,10,10,10,10,10,10,10,10,-14,]),'*':([2,3,7,15,16,17,19,20,21,22,23,24,25,27,36,37,38,39,40,41,44,47,],[-14,12,-13,-11,-14,12,12,12,12,-8,-9,-10,-12,12,12,12,12,12,12,12,12,-14,]),'/':([2,3,7,15,16,17,19,20,21,22,23,24,25,27,36,37,38,39,40,41,44,47,],[-14,13,-13,-11,-14,13,13,13,13,-8,-9,-10,-12,13,13,13,13,13,13,13,13,-14,]),'%':([2,3,7,15,16,17,19,20,21,22,23,24,25,27,36,37,38,39,40,41,44,47,],[-14,14,-13,-11,-14,14,14,14,14,-8,-9,-10,-12,14,14,14,14,14,14,14,14,-14,]),'PRINT':([2,3,4,7,15,16,19,20,21,22,23,24,25,43,44,45,46,47,48,49,50,55,56,],[-14,-2,-3,-13,-11,-14,-1,-6,-7,-8,-9,-10,-12,-3,-2,-15,51,-14,-18,-16,-17,-4,-5,]),'ENDIF':([2,3,4,7,15,16,19,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,55,56,],[-14,-2,-3,-13,-11,-14,-1,-6,-7,-8,-9,-10,-12,48,-3,-2,-15,-22,-14,-18,-16,-17,-4,-5,]),')':([7,15,16,17,20,21,22,23,24,25,],[-13,-11,-14,25,-6,-7,-8,-9,-10,-12,]),'GREATERTHAN':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,29,]),'LOWERTHAN':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,30,]),'GREATEREQ':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,31,]),'LOWEREQ':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,32,]),'EQEQ':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,33,]),'DIF':([7,15,16,20,21,22,23,24,25,27,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,34,]),'RPAREN':([7,15,16,20,21,22,23,24,25,26,36,37,38,39,40,41,53,54,],[-13,-11,-14,-6,-7,-8,-9,-10,-12,28,-27,-28,-29,-30,-31,-32,55,56,]),'LPAREN':([8,51,],[18,52,]),'TWOPOINTS':([28,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,35,46,],[1,45,49,]),'expression':([0,5,6,9,10,11,12,13,14,18,29,30,31,32,33,34,35,46,],[3,15,17,19,20,21,22,23,24,27,36,37,38,39,40,41,44,3,]),'if_statement':([0,35,46,],[4,43,4,]),'comparison':([18,],[26,]),'then_statement':([35,],[42,]),'statements':([35,],[46,]),'print':([46,],[50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','Yacc.py',27),
  ('statement -> expression','statement',1,'p_statement_expr','Yacc.py',32),
  ('statement -> if_statement','statement',1,'p_statement_expr','Yacc.py',33),
  ('print -> PRINT LPAREN NAME RPAREN','print',4,'p_print','Yacc.py',37),
  ('print -> PRINT LPAREN NUMBER RPAREN','print',4,'p_print','Yacc.py',38),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Yacc.py',43),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Yacc.py',44),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Yacc.py',45),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Yacc.py',46),
  ('expression -> expression % expression','expression',3,'p_expression_binop','Yacc.py',47),
  ('expression -> - expression','expression',2,'p_expression_uminus','Yacc.py',61),
  ('expression -> ( expression )','expression',3,'p_expression_group','Yacc.py',66),
  ('expression -> NUMBER','expression',1,'p_expression_number','Yacc.py',71),
  ('expression -> NAME','expression',1,'p_expression_name','Yacc.py',76),
  ('statements -> statement','statements',1,'p_statements_expr','Yacc.py',84),
  ('statements -> statements statement','statements',2,'p_statements_expr','Yacc.py',85),
  ('statements -> statements print','statements',2,'p_statements_expr','Yacc.py',86),
  ('if_statement -> IF LPAREN comparison RPAREN TWOPOINTS then_statement ENDIF','if_statement',7,'p_expression_if','Yacc.py',91),
  ('then_statement -> if_statement','then_statement',1,'p_expression_then','Yacc.py',96),
  ('then_statement -> expression','then_statement',1,'p_expression_then','Yacc.py',97),
  ('then_statement -> statement','then_statement',1,'p_expression_then','Yacc.py',98),
  ('then_statement -> statements','then_statement',1,'p_expression_then','Yacc.py',99),
  ('else_statement -> ELSE expression ENDELSE','else_statement',3,'p_expression_else','Yacc.py',105),
  ('else_statement -> ELSE if_statement ENDELSE','else_statement',3,'p_expression_else','Yacc.py',106),
  ('else_statement -> empty','else_statement',1,'p_expression_else','Yacc.py',107),
  ('empty -> ','empty',1,'p_empty','Yacc.py',112),
  ('comparison -> expression GREATERTHAN expression','comparison',3,'p_expression_comparison','Yacc.py',116),
  ('comparison -> expression LOWERTHAN expression','comparison',3,'p_expression_comparison','Yacc.py',117),
  ('comparison -> expression GREATEREQ expression','comparison',3,'p_expression_comparison','Yacc.py',118),
  ('comparison -> expression LOWEREQ expression','comparison',3,'p_expression_comparison','Yacc.py',119),
  ('comparison -> expression EQEQ expression','comparison',3,'p_expression_comparison','Yacc.py',120),
  ('comparison -> expression DIF expression','comparison',3,'p_expression_comparison','Yacc.py',121),
]
